'use client'

import React, { useState } from 'react'
import { useRouter } from 'next/navigation'
import { Search, Plus, Filter, Sparkles, Users, Globe } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Badge } from '@/components/ui/badge'
import { Card } from '@/components/ui/card'

export default function FanZoneHome() {
  const router = useRouter()
  const [searchQuery, setSearchQuery] = useState('')
  const [showSearch, setShowSearch] = useState(false)
  const [activeFilter, setActiveFilter] = useState('trending')
  const [selectedCategory, setSelectedCategory] = useState('all')
  const [selectedCountry, setSelectedCountry] = useState('latam')

  const mockMyFanrooms = [
    {
      id: '1',
      name: 'BTS Army MÃ©xico',
      slug: 'bts-army-mexico',
      description: 'Fans mexicanos de BTS',
      category: 'kpop',
      memberCount: 1250,
      activeMembers: 45,
      coverImage: null,
      isMember: true,
      isTrending: true
    },
    {
      id: '2',
      name: 'Blackpink LATAM',
      slug: 'blackpink-latam',
      description: 'Comunidad latinoamericana de BLACKPINK',
      category: 'kpop',
      memberCount: 890,
      activeMembers: 23,
      coverImage: null,
      isMember: true,
      isTrending: false
    }
  ]

  const mockExploreFanrooms = [
    {
      id: '3',
      name: 'NewJeans Fans Chile',
      slug: 'newjeans-fans-chile',
      description: 'Fans chilenos de NewJeans',
      category: 'kpop',
      memberCount: 456,
      activeMembers: 12,
      coverImage: null,
      isMember: false,
      isTrending: true,
      isFeatured: true
    },
    {
      id: '4',
      name: 'K-Drama Lovers',
      slug: 'k-drama-lovers',
      description: 'Discutimos los mejores dramas coreanos',
      category: 'kdrama',
      memberCount: 2100,
      activeMembers: 67,
      coverImage: null,
      isMember: false,
      isTrending: false,
      isFeatured: false
    },
    {
      id: '5',
      name: 'K-Beauty Tips',
      slug: 'k-beauty-tips',
      description: 'Compartimos tips de belleza coreana',
      category: 'kbeauty',
      memberCount: 789,
      activeMembers: 34,
      coverImage: null,
      isMember: false,
      isTrending: false,
      isFeatured: true
    },
    {
      id: '6',
      name: 'LE SSERAFIM Global',
      slug: 'le-sserafim-global',
      description: 'Fans globales de LE SSERAFIM',
      category: 'kpop',
      memberCount: 1567,
      activeMembers: 89,
      coverImage: null,
      isMember: false,
      isTrending: true,
      isFeatured: false
    }
  ]

  const handleViewFanroom = (slug: string, country: string = 'latam') => {
    router.push(`/community/fanzone/${country}/${slug}`)
  }

  const handleCreateFanroom = () => {
    router.push('/community/fanzone/create-room')
  }

  const handleJoinFanroom = (fanroomId: string) => {
    console.log('Join fanroom:', fanroomId)
  }

  return (
    <div className="w-full space-y-6 pt-4">
      <div className="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 pb-4">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center gap-3">
            <h1 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100">
              FanZone ðŸ’œ
            </h1>
            <Badge variant="secondary" className="bg-purple-100 text-purple-700 dark:bg-purple-900 dark:text-purple-300">
              Conecta con fans como tÃº
            </Badge>
          </div>
          
          <div className="flex items-center gap-2">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setShowSearch(!showSearch)}
              className="p-2"
            >
              <Search className="w-5 h-5" />
            </Button>
            
            <Button
              variant="ghost"
              size="sm"
              onClick={handleCreateFanroom}
              className="p-2"
            >
              <Plus className="w-5 h-5" />
            </Button>
          </div>
        </div>

        {showSearch && (
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
            <Input
              placeholder="Â¿QuÃ© te apasiona?"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="pl-10"
            />
          </div>
        )}

        <div className="space-y-3 mt-4">
          <div className="flex items-center gap-2 overflow-x-auto scrollbar-hide">
            <div className="flex items-center gap-1">
              <Globe className="w-4 h-4 text-gray-500" />
              <span className="text-sm text-gray-600 dark:text-gray-400">PaÃ­s:</span>
            </div>
            
            <div className="flex items-center gap-1">
              {([
                { code: 'latam', name: 'LATAM', flag: 'ðŸŒŽ' },
                { code: 'mx', name: 'MÃ©xico', flag: 'ðŸ‡²ðŸ‡½' },
                { code: 'pe', name: 'PerÃº', flag: 'ðŸ‡µðŸ‡ª' },
                { code: 'co', name: 'Colombia', flag: 'ðŸ‡¨ðŸ‡´' },
                { code: 'cl', name: 'Chile', flag: 'ðŸ‡¨ðŸ‡±' },
                { code: 'ar', name: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·' }
              ]).map((country) => (
                <Button
                  key={country.code}
                  variant={selectedCountry === country.code ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => setSelectedCountry(country.code)}
                  className="text-xs flex items-center gap-1"
                >
                  <span>{country.flag}</span>
                  <span className="hidden sm:inline">{country.name}</span>
                </Button>
              ))}
            </div>
          </div>

          <div className="flex items-center gap-2 overflow-x-auto scrollbar-hide">
            <div className="flex items-center gap-1">
              <Filter className="w-4 h-4 text-gray-500" />
              <span className="text-sm text-gray-600 dark:text-gray-400">Filtrar:</span>
            </div>
            
            <div className="flex items-center gap-1">
              {(['trending', 'recent', 'featured', 'popular']).map((filter) => (
                <Button
                  key={filter}
                  variant={activeFilter === filter ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => setActiveFilter(filter)}
                  className="text-xs"
                >
                  {filter === 'trending' ? 'En llamas' :
                   filter === 'recent' ? 'Recientes' :
                   filter === 'featured' ? 'Destacadas' : 'Populares'}
                </Button>
              ))}
            </div>
            
            <div className="flex items-center gap-1 ml-2">
              {(['all', 'kpop', 'kdrama', 'kbeauty']).map((category) => (
                <Button
                  key={category}
                  variant={selectedCategory === category ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => setSelectedCategory(category)}
                  className="text-xs"
                >
                  {category === 'all' ? 'Todas' : 
                   category === 'kpop' ? 'K-Pop' :
                   category === 'kdrama' ? 'K-Drama' : 'K-Beauty'}
                </Button>
              ))}
            </div>
          </div>
        </div>
      </div>

      <div className="space-y-4">
        <div className="flex items-center justify-between">
          <h2 className="text-lg font-semibold text-gray-900 dark:text-gray-100">
            Mis Comunidades
          </h2>
        </div>

        <div className="flex gap-3 overflow-x-auto scrollbar-hide pb-2">
          {mockMyFanrooms.map((fanroom) => (
            <Card
              key={fanroom.id}
              className="flex-shrink-0 w-32 cursor-pointer"
              onClick={() => handleViewFanroom(fanroom.slug)}
            >
              <div className="w-full h-24 bg-gradient-to-br from-purple-400 to-pink-400 rounded-t-xl flex items-center justify-center">
                <span className="text-white text-2xl font-bold">
                  {fanroom.name.charAt(0).toUpperCase()}
                </span>
              </div>
              <div className="p-3">
                <h3 className="font-medium text-sm truncate">{fanroom.name}</h3>
                <div className="flex items-center gap-1 text-xs text-gray-500 mt-1">
                  <Users className="w-3 h-3" />
                  <span>{fanroom.memberCount}</span>
                </div>
                <Button size="sm" variant="outline" className="w-full text-xs mt-2">
                  Unido
                </Button>
              </div>
            </Card>
          ))}
        </div>
      </div>

      <div className="space-y-4">
        <div className="flex items-center gap-2">
          <Sparkles className="w-5 h-5 text-purple-500" />
          <h2 className="text-xl font-semibold text-gray-900 dark:text-gray-100">
            En llamas ðŸ”¥
          </h2>
        </div>
        
        <div className="grid grid-cols-2 lg:grid-cols-3 gap-4">
          {mockExploreFanrooms.filter(f => f.isTrending).map((fanroom) => (
            <Card key={fanroom.id} className="cursor-pointer">
              <div className="relative w-full h-32 bg-gradient-to-br from-purple-400 to-pink-400 rounded-t-xl flex items-center justify-center">
                <span className="text-white text-3xl font-bold">
                  {fanroom.name.charAt(0).toUpperCase()}
                </span>
                <Badge className="absolute top-2 left-2 bg-orange-500 text-white text-xs">
                  ðŸ”¥ En llamas
                </Badge>
              </div>
              <div className="p-4">
                <h3 className="font-semibold text-sm">{fanroom.name}</h3>
                <p className="text-xs text-gray-600 mt-1 line-clamp-2">{fanroom.description}</p>
                <div className="flex items-center justify-between mt-3">
                  <div className="flex items-center gap-1 text-xs text-gray-500">
                    <Users className="w-4 h-4" />
                    <span>{fanroom.memberCount}</span>
                  </div>
                  <Button size="sm" className="text-xs">
                    SÃºmate
                  </Button>
                </div>
              </div>
            </Card>
          ))}
        </div>
      </div>

      <div className="space-y-4">
        <h2 className="text-xl font-semibold text-gray-900 dark:text-gray-100">
          Descubre comunidades
        </h2>
        
        <div className="grid grid-cols-2 lg:grid-cols-3 gap-4">
          {mockExploreFanrooms.map((fanroom) => (
            <Card key={fanroom.id} className="cursor-pointer">
              <div className="relative w-full h-32 bg-gradient-to-br from-purple-400 to-pink-400 rounded-t-xl flex items-center justify-center">
                <span className="text-white text-3xl font-bold">
                  {fanroom.name.charAt(0).toUpperCase()}
                </span>
              </div>
              <div className="p-4">
                <h3 className="font-semibold text-sm">{fanroom.name}</h3>
                <p className="text-xs text-gray-600 mt-1 line-clamp-2">{fanroom.description}</p>
                <div className="flex items-center justify-between mt-3">
                  <div className="flex items-center gap-1 text-xs text-gray-500">
                    <Users className="w-4 h-4" />
                    <span>{fanroom.memberCount}</span>
                  </div>
                  <Button size="sm" className="text-xs">
                    SÃºmate
                  </Button>
                </div>
              </div>
            </Card>
          ))}
        </div>
      </div>

      <div className="fixed bottom-20 right-4 z-50 md:bottom-24 md:right-6">
        <Button
          size="lg"
          onClick={handleCreateFanroom}
          className="w-14 h-14 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 shadow-lg hover:shadow-xl transition-all duration-200"
        >
          <span className="text-white text-xl">+ðŸ’«</span>
        </Button>
      </div>
    </div>
  )
}
