'use client'

import { useState, useEffect, Suspense } from 'react'
import { useSearchParams, useRouter } from 'next/navigation'
import HomeTab from '@/components/main/app/home/HomeTab'
import MeetTab from '@/components/main/app/meet/MeetTab'
import CommunityTab from '@/components/main/app/community/CommunityTab'
import MyTab from '@/components/main/app/me/MyTab'
import ChargingTab from '@/components/main/app/charging/ChargingTab'
import EventTab from '@/components/main/app/event/EventTab'
import { useLanguage } from '@/context/LanguageContext'

function AppPageContent() {
  const { t } = useLanguage()
  const searchParams = useSearchParams()
  const router = useRouter()
  
  const [activeTab, setActiveTab] = useState('home')

  // URL ÌååÎùºÎØ∏ÌÑ∞ÏóêÏÑú ÌÉ≠ ÌôïÏù∏ Î∞è ÏÑ§Ï†ï
  useEffect(() => {
    // ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑúÎßå Ïã§Ìñâ
    if (typeof window === 'undefined') return
    
    const tabParam = searchParams.get('tab')
    console.log('MainPage: tabParam from URL:', tabParam)
    
    let targetTab = 'home' // Í∏∞Î≥∏Í∞í
    
    if (tabParam && ['home', 'meet', 'community', 'me', 'charging', 'event'].includes(tabParam)) {
      // URL ÌååÎùºÎØ∏ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ Í∑∏Í≤ÉÏùÑ ÏÇ¨Ïö©
      targetTab = tabParam
      console.log('MainPage: using URL param:', targetTab)
    } else {
      // URL ÌååÎùºÎØ∏ÌÑ∞Í∞Ä ÏóÜÏúºÎ©¥ Í∏∞Î≥∏Í∞í ÏÇ¨Ïö©ÌïòÍ≥† URL ÏóÖÎç∞Ïù¥Ìä∏
      console.log('MainPage: no tab param, using default: home')
      router.replace('/main?tab=home')
      return // URL ÏóÖÎç∞Ïù¥Ìä∏ ÌõÑ Îã§Ïãú Ïã§ÌñâÎê† Í≤ÉÏù¥ÎØÄÎ°ú Ïó¨Í∏∞ÏÑú Ï¢ÖÎ£å
    }
    
    // ÌÉ≠ ÏÑ§Ï†ï
    setActiveTab(targetTab)
    ;(window as any).currentMainTab = targetTab
  }, [searchParams, router])



  // Ìó§ÎçîÏóêÏÑú ÌÉ≠ Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏ Í∞êÏßÄ
  useEffect(() => {
    const handleMainTabChanged = (event: CustomEvent) => {
      console.log('MainPage: received mainTabChanged event:', event.detail.tab)
      setActiveTab(event.detail.tab)
    }

    window.addEventListener('mainTabChanged', handleMainTabChanged as EventListener)
    return () => window.removeEventListener('mainTabChanged', handleMainTabChanged as EventListener)
  }, [])

  // Ï†ÑÏó≠ Ìï®ÏàòÎ°ú ÌÉ≠ Î≥ÄÍ≤Ω Í∞ÄÎä•ÌïòÎèÑÎ°ù ÏÑ§Ï†ï
  useEffect(() => {
    if (typeof window !== 'undefined') {
      (window as any).changeMainTab = (tab: string) => {
        console.log('MainPage: changeMainTab called with:', tab)
        setActiveTab(tab)
      }
    }
  }, [])
  
  return (
    <div className="min-h-screen body-gradient pt-44">
      {/* Î©îÏù∏ ÏΩòÌÖêÏ∏† ÏÑπÏÖò */}
      <div className="max-w-5xl mx-auto px-4 py-6 relative z-0">
        <div className="w-full">

          {/* ÏΩòÌÖêÏ∏† */}
          <div className="space-y-8">
            {activeTab === 'home' && (
              <div className="card p-8">
                <HomeTab />
              </div>
            )}

            {activeTab === 'meet' && (
              <div className="card p-8">
                <div className="flex items-center gap-3 mb-6">
                  <div className="w-12 h-12 bg-brand-100 rounded-3xl flex items-center justify-center">
                    <span className="text-2xl">üé•</span>
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-800">{t('main.meet')}</h2>
                    <p className="text-gray-600">{t('main.meetDescription')}</p>
                    <p className="text-sm text-blue-600 font-medium mt-1">{t('mainPage.akoExplanation')}</p>
                  </div>
                </div>
                <MeetTab />
              </div>
            )}

            {activeTab === 'community' && (
              <div className="card p-8">
                <div className="flex items-center gap-3 mb-6">
                  <div className="w-12 h-12 bg-mint-100 rounded-3xl flex items-center justify-center">
                    <span className="text-2xl">üí¨</span>
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-800">{t('main.community')} (Q&A)</h2>
                    <p className="text-gray-600">{t('main.communityDescription')}</p>
                  </div>
                </div>
                <CommunityTab />
              </div>
            )}

            {activeTab === 'me' && (
              <div className="card p-8">
                <div className="flex items-center gap-3 mb-6">
                  <div className="w-12 h-12 bg-sky-100 rounded-3xl flex items-center justify-center">
                    <span className="text-2xl">üë§</span>
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-800">{t('main.me')}</h2>
                    <p className="text-gray-600">{t('main.meDescription')}</p>
                  </div>
                </div>
                <MyTab />
              </div>
            )}


            {activeTab === 'charging' && (
              <div className="card p-8">
                <div className="flex items-center gap-3 mb-6">
                  <div className="w-12 h-12 bg-purple-100 rounded-3xl flex items-center justify-center">
                    <span className="text-2xl">‚ö°</span>
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-800">{t('storeTab.title')}</h2>
                    <p className="text-gray-600">{t('storeTab.subtitle')}</p>
                    <p className="text-sm text-purple-600 font-medium mt-1">{t('mainPage.akoExplanation')}</p>
                  </div>
                </div>
                <ChargingTab />
              </div>
            )}

            {activeTab === 'event' && (
              <div className="card p-8">
                <EventTab />
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}

export default function AppPage() {
  const { t } = useLanguage()
  
  return (
    <Suspense fallback={<div className="min-h-screen body-gradient pt-40 flex items-center justify-center">{t('buttons.loading')}</div>}>
      <AppPageContent />
    </Suspense>
  )
}
